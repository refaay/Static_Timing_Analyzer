/* 
* ******************************************************************************
* *                                                                            *
* *                   Copyright (C) 2004-2008, Nangate Inc.                    *
* *                           All rights reserved.                             *
* *                                                                            *
* * Nangate and the Nangate logo are trademarks of Nangate Inc.                *
* *                                                                            *
* * All trademarks, logos, software marks, and trade names (collectively the   *
* * "Marks") in this program are proprietary to Nangate or other respective    *
* * owners that have granted Nangate the right and license to use such Marks.  *
* * You are not permitted to use the Marks without the prior written consent   *
* * of Nangate or such third party that may own the Marks.                     *
* *                                                                            *
* * This file has been provided pursuant to a License Agreement containing     *
* * restrictions on its use.  This file contains valuable trade secrets and    *
* * proprietary information of Nangate Inc., and is protected by U.S. and      *
* * international laws and/or treaties.                                        *
* *                                                                            *
* * The copyright notice(s) in this file does not indicate actual or intended  *
* * publication of this file.                                                  *
* *                                                                            *
* *           NGLibraryCreator Development_version build 0805160300            *
* *                                                                            *
* ******************************************************************************
*
* Spice engine            : Hspice A-2007.09
* Liberty export type     : conditional
*
* Characterization Corner : fast
* Process                 : FastFast
* Temperature             : 0C
* Voltage                 : 1.25V
*
****************************************************************************/

library (NangateOpenCellLibrary_PDKv1.2_v2008_05) {

  /* Documentation Attributes */
  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  library_features        		  (report_delay_calculation,report_power_calculation);

  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 0.00;
  nom_voltage             		: 1.25;

  operating_conditions (FastFast_1.25V_0C) {
    process     	: 1.00;
    voltage     	: 1.25;
    temperature 	: 0.00;
    tree_type   	: balanced_tree;
  }
  default_operating_conditions : FastFast_1.25V_0C;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 1.00 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.0;
  default_input_pin_cap       		: 1.0;
  default_output_pin_cap      		: 0.0;
  default_fanout_load         		: 1.0;


  lu_table_template (Timing_X1) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.000800,0.001600,0.003200,0.006400,0.012800")
  }


  lu_table_template (Timing_X2) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.001600,0.003200,0.006400,0.012800,0.025600")
  }


  power_lut_template (Power_X1) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.000800,0.001600,0.003200,0.006400,0.012800")
  }


  power_lut_template (Power_X2) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.001600,0.003200,0.006400,0.012800,0.025600")
  }


  lu_table_template (Tristate_Disable) {
	variable_1 : input_net_transition;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
  }


  power_lut_template (Hidden_Power_Data) {
	variable_1 : input_transition_time;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
  }


  power_lut_template (Hidden_Power_Clk) {
	variable_1 : input_transition_time;
	index_1 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  power_lut_template (Hidden_Power_Set_Reset) {
	variable_1 : input_transition_time;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
  }


  lu_table_template (Setup) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Hold) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Recovery) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Removal) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.007500,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.005000,0.093750,0.187500,0.375000,0.750000")
  }


  lu_table_template (Timing_X8) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.006400,0.012800,0.025600,0.051200,0.102400")
  }


  lu_table_template (Timing_X4) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.003200,0.006400,0.012800,0.025600,0.051200")
  }


  lu_table_template (Timing_X32) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.025600,0.051200,0.102400,0.204800,0.409600")
  }


  lu_table_template (Timing_X3) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.002400,0.004800,0.009600,0.019200,0.038400")
  }


  lu_table_template (Timing_X16) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.012800,0.025600,0.051200,0.102400,0.204800")
  }


  power_lut_template (Power_X8) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.006400,0.012800,0.025600,0.051200,0.102400")
  }


  power_lut_template (Power_X4) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.003200,0.006400,0.012800,0.025600,0.051200")
  }


  power_lut_template (Power_X32) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.025600,0.051200,0.102400,0.204800,0.409600")
  }


  power_lut_template (Power_X3) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.002400,0.004800,0.009600,0.019200,0.038400")
  }


  power_lut_template (Power_X16) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.015000,0.030000,0.060000,0.120000,0.240000,0.480000,0.960000")
	index_2 ("0.000400,0.012800,0.025600,0.051200,0.102400,0.204800")
  }


cell (AND2_X1) {

	area               	: 1.064000;

	cell_leakage_power 	: 28693.493432;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 16941.264710;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 17704.637810;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 37167.808290;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 42960.262920;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.000476;
		fall_capacitance	: 0.000460;
		rise_capacitance	: 0.000492;
		fall_capacitance_range		(0.000394, 0.000484);
		rise_capacitance_range		(0.000391, 0.000580);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A2 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000038,0.000037,0.000019,0.000018,0.000017,0.000015,0.000011,0.000010");
			}

		}
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.000445;
		fall_capacitance	: 0.000417;
		rise_capacitance	: 0.000472;
		fall_capacitance_range		(0.000365, 0.000434);
		rise_capacitance_range		(0.000369, 0.000562);
		max_transition		: 0.960000;

		internal_power () {

			when      	: "!A1 & !ZN";

			power(Hidden_Power_Data) {
				values ("0.000057,0.000052,0.000027,0.000024,0.000020,0.000016,0.000013,0.000009");
			}

		}
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.012800;
		max_transition		: 0.960000;
		function		: "(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.024816,0.027079,0.031216,0.038854,0.053407,0.082017", \
				        "0.028214,0.030453,0.034621,0.042256,0.056727,0.085334", \
				        "0.034394,0.036725,0.040856,0.048604,0.063093,0.091668", \
				        "0.043660,0.046208,0.050767,0.058810,0.073528,0.102021", \
				        "0.058235,0.061114,0.066294,0.075213,0.090792,0.119440", \
				        "0.081129,0.084535,0.090587,0.101033,0.118599,0.149472", \
				        "0.118361,0.122532,0.129954,0.142602,0.163697,0.198829", \
				        "0.182692,0.187864,0.197130,0.212982,0.239001,0.281787");
			}
			cell_rise(Timing_X1) {
				values ("0.025161,0.028047,0.033564,0.044250,0.065404,0.107837", \
				        "0.027303,0.030185,0.035636,0.046279,0.067481,0.109765", \
				        "0.030082,0.032887,0.038207,0.048792,0.069989,0.112366", \
				        "0.032602,0.035533,0.040904,0.051473,0.072428,0.114462", \
				        "0.033468,0.036747,0.042632,0.053253,0.074400,0.116552", \
				        "0.028337,0.032171,0.039060,0.051049,0.072609,0.115782", \
				        "0.009828,0.014321,0.022413,0.036690,0.060830,0.105725", \
				        "-0.037041,-0.031492,-0.021664,-0.004058,0.025120,0.074494");
			}
			fall_transition(Timing_X1) {
				values ("0.006953,0.008373,0.011122,0.016731,0.028567,0.053039", \
				        "0.007043,0.008443,0.011188,0.016765,0.028589,0.053037", \
				        "0.007633,0.008942,0.011519,0.017033,0.028655,0.053173", \
				        "0.009029,0.010403,0.012910,0.018123,0.029124,0.053181", \
				        "0.011370,0.012712,0.015506,0.020416,0.030792,0.053802", \
				        "0.015743,0.017186,0.019928,0.025450,0.035538,0.057150", \
				        "0.023093,0.024872,0.027986,0.033950,0.044563,0.066047", \
				        "0.036303,0.038587,0.042627,0.049502,0.061148,0.083762");
			}
			rise_transition(Timing_X1) {
				values ("0.009266,0.011510,0.016092,0.025633,0.045305,0.085127", \
				        "0.009329,0.011569,0.016110,0.025614,0.045322,0.085036", \
				        "0.009664,0.011701,0.016318,0.025734,0.045332,0.085217", \
				        "0.010505,0.012585,0.016977,0.026140,0.045391,0.085055", \
				        "0.012628,0.014580,0.018774,0.027555,0.046545,0.085402", \
				        "0.016108,0.018462,0.022798,0.030920,0.049270,0.088393", \
				        "0.022697,0.025095,0.029814,0.038604,0.055614,0.093604", \
				        "0.034770,0.037396,0.042249,0.051877,0.070028,0.104842");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_X1) {
				values ("0.031090,0.033496,0.037847,0.045810,0.060566,0.089300", \
				        "0.034600,0.036986,0.041342,0.049288,0.064026,0.092776", \
				        "0.041670,0.043978,0.048423,0.056377,0.071087,0.099809", \
				        "0.053325,0.055886,0.060508,0.068690,0.083492,0.112142", \
				        "0.071601,0.074412,0.079418,0.088158,0.103563,0.132342", \
				        "0.102394,0.105594,0.111257,0.120941,0.137630,0.167172", \
				        "0.155053,0.158911,0.165697,0.177047,0.195845,0.228093", \
				        "0.249132,0.253981,0.262313,0.276328,0.299035,0.336019");
			}
			cell_rise(Timing_X1) {
				values ("0.028395,0.031284,0.036817,0.047525,0.068734,0.111046", \
				        "0.029889,0.032779,0.038296,0.048965,0.070125,0.112563", \
				        "0.032111,0.034995,0.040472,0.051080,0.072226,0.114469", \
				        "0.033760,0.036798,0.042463,0.053128,0.074188,0.116420", \
				        "0.032569,0.035911,0.042037,0.053263,0.074595,0.116932", \
				        "0.023113,0.026941,0.033899,0.046209,0.068668,0.112306", \
				        "-0.005396,-0.0009037,0.007141,0.021256,0.046237,0.091814", \
				        "-0.074733,-0.069379,-0.059814,-0.043245,-0.014087,0.036091");
			}
			fall_transition(Timing_X1) {
				values ("0.007843,0.009205,0.011936,0.017435,0.029034,0.053424", \
				        "0.007830,0.009199,0.011935,0.017452,0.029030,0.053345", \
				        "0.008007,0.009427,0.012162,0.017554,0.029091,0.053368", \
				        "0.009427,0.010681,0.013265,0.018234,0.029392,0.053530", \
				        "0.011487,0.012697,0.015196,0.020000,0.030337,0.053693", \
				        "0.014988,0.016286,0.018819,0.023393,0.033307,0.055277", \
				        "0.021210,0.022652,0.025174,0.030151,0.039676,0.060228", \
				        "0.032291,0.034034,0.036976,0.042433,0.052157,0.071917");
			}
			rise_transition(Timing_X1) {
				values ("0.009276,0.011517,0.016088,0.025629,0.045380,0.085030", \
				        "0.009313,0.011529,0.016112,0.025641,0.045355,0.085226", \
				        "0.009637,0.011706,0.016253,0.025671,0.045366,0.085022", \
				        "0.010547,0.012700,0.017025,0.026078,0.045312,0.085071", \
				        "0.012456,0.014620,0.018851,0.027638,0.046496,0.085239", \
				        "0.015554,0.017921,0.022409,0.030998,0.049391,0.088519", \
				        "0.020631,0.023305,0.028179,0.037439,0.055069,0.093914", \
				        "0.029632,0.032421,0.037851,0.048142,0.066718,0.103862");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_X1) {
				values ("0.001981,0.001977,0.001966,0.001961,0.001962,0.001958", \
				        "0.002040,0.002032,0.002021,0.002015,0.002008,0.002007", \
				        "0.002311,0.002302,0.002285,0.002276,0.002266,0.002260", \
				        "0.002984,0.002963,0.002937,0.002907,0.002884,0.002869", \
				        "0.004525,0.004473,0.004431,0.004372,0.004319,0.004280", \
				        "0.007912,0.007823,0.007698,0.007575,0.007450,0.007350", \
				        "0.014931,0.014790,0.014568,0.014281,0.014002,0.013775", \
				        "0.029191,0.029010,0.028694,0.028206,0.027574,0.027019");
			}
			rise_power(Power_X1) {
				values ("0.002533,0.002534,0.002542,0.002556,0.002581,0.002658", \
				        "0.002573,0.002571,0.002570,0.002594,0.002628,0.002634", \
				        "0.002803,0.002784,0.002763,0.002765,0.002801,0.002805", \
				        "0.003438,0.003415,0.003370,0.003346,0.003353,0.003353", \
				        "0.005004,0.004967,0.004923,0.004826,0.004762,0.004770", \
				        "0.008389,0.008319,0.008246,0.008147,0.007998,0.007844", \
				        "0.015416,0.015308,0.015150,0.014968,0.014739,0.014529", \
				        "0.029736,0.029565,0.029302,0.028955,0.028564,0.028126");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_X1) {
				values ("0.003290,0.003276,0.003257,0.003240,0.003231,0.003218", \
				        "0.003338,0.003323,0.003304,0.003285,0.003273,0.003266", \
				        "0.003599,0.003573,0.003555,0.003534,0.003503,0.003492", \
				        "0.004241,0.004207,0.004179,0.004126,0.004106,0.004081", \
				        "0.005719,0.005672,0.005606,0.005538,0.005458,0.005406", \
				        "0.008859,0.008772,0.008663,0.008534,0.008410,0.008312", \
				        "0.015399,0.015271,0.015072,0.014842,0.014607,0.014399", \
				        "0.028679,0.028520,0.028236,0.027817,0.027328,0.026891");
			}
			rise_power(Power_X1) {
				values ("0.002451,0.002453,0.002463,0.002476,0.002510,0.002551", \
				        "0.002436,0.002435,0.002442,0.002454,0.002472,0.002513", \
				        "0.002546,0.002536,0.002536,0.002551,0.002581,0.002586", \
				        "0.003006,0.002989,0.002966,0.002958,0.002963,0.003023", \
				        "0.004345,0.004317,0.004281,0.004241,0.004198,0.004236", \
				        "0.007402,0.007354,0.007279,0.007202,0.007103,0.007025", \
				        "0.013817,0.013730,0.013601,0.013452,0.013310,0.013108", \
				        "0.026940,0.026787,0.026572,0.026265,0.026001,0.025667");
			}
		}
	}

}



}
